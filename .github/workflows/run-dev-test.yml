name: Run DEV E2E Tests
on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: 'Test Dev Env'     
        required: true
        options:
          - https://dev.akord.link
        default: https://dev.akord.link
  schedule:
  - cron: "0 10,22 * * *"

jobs:
  e2e-tests:
    name: Run TestCafe Tests
    runs-on: ${{ matrix.os }}
    outputs:
      outputreport: ${{ steps.testreport.outputs.report }}
      status: ${{ steps.testreport.outputs.status}}
      env_var: ${{ steps.set_env.outputs.E2E_URL }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/checkout@v2
      - name: Set env
        id: set_env
        run: |
          echo "Setting E2E_URL to dev url"
          echo "E2E_URL=https://dev.akord.link" >> "$GITHUB_ENV"
          echo "E2E_URL=https://dev.akord.link" >> "$GITHUB_OUTPUT"
      - name: Install dependencies
        run: npm install
      - name: Run TestCafe
        run: npm run e2e:headless-dev
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            dist/e2e/test-results.xml
      - id: testreport
        name: Echo report
        run: |
          passed=$(jq -r '.fixtures[].tests[] | select(.errs | length == 0) | .name' dist/e2e/test-results.json)
          failed=$(jq -r '.fixtures[].tests[] | select(.errs | length > 0) | .name' dist/e2e/test-results.json)

          success_emoji=":white_check_mark:"
          fail_emoji=":x:"

          formatted_passed=$(echo "$passed" | sed -e "s/^/$success_emoji /")
          formatted_failed=$(echo "$failed" | sed -e "s/^/$fail_emoji /")

          report="$formatted_passed"$'\n'"$formatted_failed"
          echo "$report"
          
          delimiter="$(openssl rand -hex 8)"
          echo "report<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$report" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

          if [ -z "$failed" ]; then
              echo "Tests passed!"
          else
              echo "Tests failed!"
              exit 1
          fi

  send-discord-notification:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: ${{ failure() }}

    steps:
      - name: Notify Discord on job status
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            Tests failed :broken_heart: [${{ needs.e2e-tests.outputs.env_var }}]
            ${{ needs.e2e-tests.outputs.outputreport }}

  back-to-normal:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: ${{ success() }}

    steps:
      - name: Check status
        id: check-status
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${{ github.repository }}/actions/runs")

          previous_run_conclusion=$(echo "$response" | jq -r '.workflow_runs | map(select(.name == "Run DEV E2E Tests")) | first | .conclusion')
          previous_run_id=$(echo "$response" | jq -r '.workflow_runs | map(select(.name == "Run DEV E2E Tests")) | first | .id')

          echo "Previous run $previous_run_id concluded with: $previous_run_conclusion"
          echo "recent_status=$previous_run_conclusion" >> $GITHUB_OUTPUT
      - name: Notify Discord on job status
        uses: tsickert/discord-webhook@v5.3.0
        if: ${{ steps.check-status.outputs.recent_status == 'failure' }}
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            Back to normal! Thanks for fixing :metal: [${{ needs.e2e-tests.outputs.env_var }}]
